version: '3.9'

services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    command: ['/docker-entrypoint-initdb.d/init-replica.sh']
    ports:
      - '27018:27017'
    volumes:
      - mongo1-data:/data/db
      - ./mongo-init/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo2:
    image: mongo:6
    container_name: mongo2
    command: ['/docker-entrypoint-initdb.d/init-replica.sh']
    ports:
      - '27019:27017'
    volumes:
      - mongo2-data:/data/db
      - ./mongo-init/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    depends_on:
      - mongo1
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo3:
    image: mongo:6
    container_name: mongo3
    command: ['/docker-entrypoint-initdb.d/init-replica.sh']
    ports:
      - '27020:27017'
    volumes:
      - mongo3-data:/data/db
      - ./mongo-init/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    depends_on:
      - mongo1
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo1
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_BASICAUTH_USERNAME: ''
      ME_CONFIG_BASICAUTH_PASSWORD: ''
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  nestjs-app:
    build: .
    container_name: nestjs-app
    restart: always
    ports:
      - '3000:3000'
    environment:
      MONGO_URI: 'mongodb://mongo1:27017,mongo2:27017,mongo3:27017/test?replicaSet=rs0'
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - mongo-express
    command: ['npm', 'run', 'start-with-mongo']

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
